PARSE TREE:
DECLARE
moduleDeclaration
MODULE
ID
SEMICOL
moduleDeclarations
moduleDeclarations
program
DEF
module
MODULE
ID
ENDDEF
TAKES
INPUT
SQBO
ID
input_plist
COLON
ARRAY
dataType
SQBO
sign
range
NUM
index
RANGEOP
sign
NUM
index
SQBC
OF
REAL
type
COMMA
moreList
ID
INTEGER
COLON
dataType
moreList
SQBC
RETURNS
SEMICOL
SQBO
ID
output_plist
COLON
REAL
type
moreOutput
SQBC
SEMICOL
START
ret
DECLARE
declareStmt
sign
actualParameter
ID
aVar
whichId
idList
moreId
COLON
INTEGER
dataType
SEMICOL
statement
statements
DECLARE
declareStmt
sign
actualParameter
ID
aVar
whichId
idList
moreId
COLON
BOOLEAN
dataType
SEMICOL
statement
statements
ID
assignmentStmt
FOR
iterativeStmt
BO
ID
IN
range_for
ID
assignmentStmt
ASSIGNOP
lvalueIDStmt
ID
aVar
whichId
nextTerm
term
a2
arithmeticExpr
a1
anyTerm
LE
relationalOp
ab2
ID
aVar
whichId
nextTerm
term
a2
arithmeticExpr
a1
ab2
arithmeticOrBooleanExpr
ab1
expression
SEMICOL
whichStmt
simpleStmt
statement
BC
SWITCH
conditionalStmt
BO
ID
BC
START
CASE
caseStmt
TRUE
value
COLON
PRINT
ioStmt
BO
ID
print_var
SQBO
whichId2
sign
ID
index
SQBC
BC
SEMICOL
statement
statements
ID
assignmentStmt
ASSIGNOP
lvalueIDStmt
ID
aVar
whichId
nextTerm
term
a2
arithmeticExpr
a1
anyTerm
ab2
arithmeticOrBooleanExpr
ab1
expression
SEMICOL
whichStmt
simpleStmt
statement
statements
statements
CASE
caseStmt
FALSE
value
COLON
PRINT
ioStmt
BO
ID
print_var
whichId2
BC
SEMICOL
statement
statements
PRINT
ioStmt
BO
ID
print_var
whichId2
BC
SEMICOL
statement
statements
statements
BREAK
SEMICOL
post
BREAK
SEMICOL
post
default
END
statement
statements
PRINT
ioStmt
BO
print_var
BC
SEMICOL
statement
statements
statements
START
DRIVERDEF
statements
DRIVER
PROGRAM
DRIVERENDDEF
START
moduleDef
DECLARE
declareStmt
sign
actualParameter
ID
aVar
whichId
idList
moreId
COLON
ARRAY
dataType
SQBO
sign
range
NUM
index
RANGEOP
sign
NUM
index
SQBC
OF
REAL
type
SEMICOL
statement
statements
DECLARE
declareStmt
sign
actualParameter
ID
aVar
whichId
idList
moreId
COLON
INTEGER
dataType
SEMICOL
statement
statements
DECLARE
declareStmt
sign
actualParameter
ID
aVar
whichId
idList
moreId
COLON
REAL
dataType
SEMICOL
statement
statements
GET_VALUE
ioStmt
BO
ID
BC
SEMICOL
statement
statements
optional
moduleReuseStmt
USE
MODULE
ID
WITH
SQBO
optional
sign
actualParameter
ID
aVar
whichId
idList
moreId
SQBC
ASSIGNOP
moduleReuseStmt
USE
MODULE
ID
WITH
PARAMETERS
sign
actualParameter
ID
aVar
whichId
idList
COMMA
moreId
sign
actualParameter
ID
aVar
whichId
moreId
SEMICOL
simpleStmt
statement
PARAMETERS
ID
assignmentStmt
ASSIGNOP
lvalueIDStmt
ID
aVar
whichId
nextTerm
term
a2
arithmeticExpr
a1
anyTerm
LE
relationalOp
ab2
ID
aVar
whichId
nextTerm
term
a2
arithmeticExpr
a1
GE
relationalOp
ab2
ID
aVar
whichId
nextTerm
term
a2
arithmeticExpr
a1
ab2
arithmeticOrBooleanExpr
ab1
expression
SEMICOL
whichStmt
simpleStmt
statement
statements
PRINT
ioStmt
BO
ID
print_var
whichId2
BC
SEMICOL
statement
statements
statements
DEF
module
MODULE
ID
ENDDEF
TAKES
INPUT
SQBO
ID
input_plist
COLON
ARRAY
dataType
SQBO
sign
range
NUM
index
RANGEOP
sign
NUM
index
SQBC
OF
REAL
type
COMMA
moreList
ID
COLON
INTEGER
dataType
moreList
SQBC
SEMICOL
ret
START
moduleDef
DECLARE
declareStmt
sign
actualParameter
ID
aVar
whichId
idList
moreId
COLON
dataType
DECLARE
declareStmt
sign
actualParameter
ID
aVar
whichId
idList
moreId
COLON
INTEGER
dataType
SEMICOL
statement
SEMICOL
ID
assignmentStmt
ASSIGNOP
lvalueIDStmt
NUM
aVar
nextTerm
term
a2
arithmeticExpr
a1
anyTerm
ab2
arithmeticOrBooleanExpr
ab1
expression
SEMICOL
whichStmt
simpleStmt
statement
statements
WHILE
iterativeStmt
BO
ID
aVar
whichId
nextTerm
term
a2
arithmeticExpr
a1
anyTerm
LE
relationalOp
ab2
ID
aVar
whichId
nextTerm
term
a2
arithmeticExpr
a1
ab2
arithmeticOrBooleanExpr
ab1
expression
BC
START
GET_VALUE
ioStmt
BO
ID
BC
SEMICOL
statement
statements
ID
assignmentStmt
SQBO
lvalueARRStmt
ID
var_id_num
newNextTerm
newTerm
newA2
startExpr
newA1
newArithmeticExpr
SQBC
ASSIGNOP
expression
PRINT
ioStmt
BO
ID
print_var
SQBO
whichId2
sign
ID
index
SQBC
BC
SEMICOL
statement
SEMICOL
statements
whichStmt
simpleStmt
statement
statements
statements
END
statement
statements
statements
statement
statements
statements
END
idList
otherModules
SEMICOL
simpleStmt
statement
statements
statements
END
END
statement
whichStmt
statements
simpleStmt
statement
statements
statements
END
moduleDef
otherModules
otherModules
driverModule
otherModules
startprogram
DOLLAR
